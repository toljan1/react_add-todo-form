{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","classNames","TodoList","todos","map","todoItem","getUserById","usersFromServer","find","todosFromServer","App","useState","visibleTodos","setTodos","setUser","titleError","setTitleError","userError","setUserError","setTitle","todoId","sort","id1","id2","action","method","type","placeholder","onChange","el","currentTarget","value","disabled","someUser","onClick","event","preventDefault","newTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.168f20ec.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../react-app-env';\n\ninterface Props {\n  user: User | null\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={user?.email}>\n    {user?.name}\n  </a>\n);\n","import classNames from 'classnames';\nimport { Todo } from '../../react-app-env';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={classNames('TodoInfo',\n      { 'TodoInfo--completed': todo.completed })}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    <UserInfo user={todo.user} />\n  </article>\n);\n","import { Todo } from '../../react-app-env';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todoItem => (\n      <TodoInfo todo={todoItem} />\n    ))}\n  </section>\n);\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo, User } from './react-app-env';\n\nfunction getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [visibleTodos, setTodos] = useState(todos);\n  const [user, setUser] = useState<User | null>(null);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n  const [title, setTitle] = useState('');\n  let todoId = todosFromServer.map(todo => +todo.id)\n    .sort((id1, id2) => id1 - id2)[0];\n\n  const onTitleChange = (el: React.FormEvent<HTMLInputElement>) => {\n    setTitleError(false);\n    setTitle(el.currentTarget.value);\n  };\n\n  const onUserChange = (el: React.FormEvent<HTMLSelectElement>) => {\n    setUserError(false);\n    setUser(getUserById(+el.currentTarget.value));\n  };\n\n  const addTodo = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n\n    if (!title) {\n      setTitleError(true);\n    }\n\n    if (!user) {\n      setUserError(true);\n    }\n\n    if (!title || !user) {\n      return;\n    }\n\n    todoId += 1;\n\n    const newTodo: Todo = {\n      id: todoId,\n      userId: user ? user.id : -1,\n      title,\n      completed: false,\n      user,\n    };\n\n    setTodos([...visibleTodos, newTodo]);\n    setUser(null);\n    setTitle('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\">\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            onChange={onTitleChange}\n            value={title}\n          />\n\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={user?.id || '0'}\n            onChange={onUserChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(someUser => (\n              <option\n                value={someUser.id}\n              >\n                {someUser.name}\n              </option>\n            ))}\n          </select>\n\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={addTodo}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}